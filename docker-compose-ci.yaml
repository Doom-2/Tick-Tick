version: '3.8'

services:
  db:
    image: postgres:15.0-alpine
    volumes:
      - pg_data:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    restart: always

    healthcheck:
      test: pg_isready -U ${DB_USER} -d ${DB_NAME}
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - backend_nw

  api:
    image: doom2/tick-tick:$GITHUB_REF_NAME-$GITHUB_RUN_ID
    restart: always
    env_file:
      - ./.env
    environment:
      POSTGRES_HOST: db
    depends_on:
      db:
        condition: service_healthy
    healthcheck:
      test: python3 -c 'import http.client;http.client.HTTPConnection("158.160.37.55", timeout=1).request("GET", "api/ping/")'
      interval: 3s
      timeout: 3s
      retries: 5
    volumes:
      - ./static:/project/static
    networks:
      - backend_nw
      - frontend_nw

  frontend:
    image: doom2/tick-tick-frontend:v3.2
    restart: always
    ports:
      - "81:80"
    networks:
      - frontend_nw
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
      - ./static:/usr/share/nginx/html/static/

volumes:
  pg_data:

networks:
  backend_nw:
    driver: bridge
  frontend_nw:
    driver: bridge
